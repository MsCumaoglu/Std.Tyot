// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

#nullable disable

namespace Core.Models
{
    public partial class User
    {
        public User()
        {
            Artical = new HashSet<Artical>();
            Comment = new HashSet<Comment>();
            Cv = new HashSet<Cv>();
            FollowingFollowerUserNavigation = new HashSet<Following>();
            FollowingFollowingUserNavigation = new HashSet<Following>();
            MessageSendToUserNavigation = new HashSet<Message>();
            MessageSenderUserNavigation = new HashSet<Message>();
            TeamMemberMap = new HashSet<TeamMemberMap>();
            UserRoleMap = new HashSet<UserRoleMap>();
            UserSetting = new HashSet<UserSetting>();
            UserSocialMap = new HashSet<UserSocialMap>();
        }

        [Key]
        public int Id { get; set; }
        [StringLength(20)]
        public string FirstName { get; set; }
        [StringLength(20)]
        public string LastName { get; set; }
        [StringLength(20)]
        public string UserName { get; set; }
        [StringLength(20)]
        public string Password { get; set; }
        [StringLength(50)]
        public string Email { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? BirthDate { get; set; }
        [StringLength(50)]
        public string Avatar { get; set; }
        [StringLength(15)]
        public string Phone { get; set; }
        [StringLength(50)]
        public string Adress { get; set; }
        public bool? Gender { get; set; }
        public int? CityId { get; set; }
        [Column("isActive")]
        public bool? IsActive { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? UpadatDate { get; set; }
        public string Description { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? CreatedDate { get; set; }

        [ForeignKey(nameof(CityId))]
        [InverseProperty("User")]
        public virtual City City { get; set; }
        [InverseProperty("User")]
        public virtual ICollection<Artical> Artical { get; set; }
        [InverseProperty("User")]
        public virtual ICollection<Comment> Comment { get; set; }
        [InverseProperty("User")]
        public virtual ICollection<Cv> Cv { get; set; }
        [InverseProperty(nameof(Following.FollowerUserNavigation))]
        public virtual ICollection<Following> FollowingFollowerUserNavigation { get; set; }
        [InverseProperty(nameof(Following.FollowingUserNavigation))]
        public virtual ICollection<Following> FollowingFollowingUserNavigation { get; set; }
        [InverseProperty(nameof(Message.SendToUserNavigation))]
        public virtual ICollection<Message> MessageSendToUserNavigation { get; set; }
        [InverseProperty(nameof(Message.SenderUserNavigation))]
        public virtual ICollection<Message> MessageSenderUserNavigation { get; set; }
        [InverseProperty("User")]
        public virtual ICollection<TeamMemberMap> TeamMemberMap { get; set; }
        [InverseProperty("User")]
        public virtual ICollection<UserRoleMap> UserRoleMap { get; set; }
        [InverseProperty("User")]
        public virtual ICollection<UserSetting> UserSetting { get; set; }
        [InverseProperty("User")]
        public virtual ICollection<UserSocialMap> UserSocialMap { get; set; }
    }
}